<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifreework.mapper.loophole.LoopholeMapper">
	<sql id="loopholeColumns">
			LOOPHOLE_ID,
			DOMAIN,
			DOMAIN_NAME,
			LOOPHOLE_DESCRIBE,
			ATTACHMENT_ID,
			STATUS,
			HANDLE_DESCRIBE,
			CONFIRM_DESCRIBE,
			CREATE_USER,
			CREATE_TIME,
			SUBMIT_USER,
			SUBMIT_TIME,
			HANDLE_USER,
			HANDLE_TIME,
			CONFIRM_USER,
			CONFIRM_TIME,
			TITLE
	</sql>

	<resultMap type="com.ifreework.entity.loophole.Loophole" id="loophole">
		<id column="LOOPHOLE_ID" property="loopholeId"/>
		<result column="TITLE" property="title"/>
		<result column="DOMAIN" property="domain"/>
		<result column="DOMAIN_NAME" property="domainName"/>
		<result column="LOOPHOLE_DESCRIBE" property="loopholeDescribe"/>
		<result column="ATTACHMENT_ID" property="attachmentId"/>
		<result column="STATUS" property="status"/>
		<result column="HANDLE_DESCRIBE" property="handleDescribe"/>
		<result column="CONFIRM_DESCRIBE" property="confirmDescribe"/>
		<result column="CREATE_USER" property="createUser"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="SUBMIT_USER" property="submitUser"/>
		<result column="SUBMIT_TIME" property="submitTime"/>
		<result column="HANDLE_USER" property="handleUser"/>
		<result column="HANDLE_TIME" property="handleTime"/>
		<result column="CONFIRM_USER" property="confirmUser"/>
		<result column="CONFIRM_TIME" property="confirmTime"/>
		<association property="creater" javaType="com.ifreework.entity.system.User">
			<result column="create_username" property="username"/>
			<result column="create_person_name" property="personName"/>
		</association>
		<association property="submiter" javaType="com.ifreework.entity.system.User">
			<result column="submit_username" property="username"/>
			<result column="submit_person_name" property="personName"/>
		</association>
		<association property="handler" javaType="com.ifreework.entity.system.User">
			<result column="handle_username" property="username"/>
			<result column="handle_person_name" property="personName"/>
		</association>
		<association property="confirmer" javaType="com.ifreework.entity.system.User">
			<result column="confirm_username" property="username"/>
			<result column="confirm_person_name" property="personName"/>
		</association>
		
		<collection property="detailList"  javaType="ArrayList"  
			column="LOOPHOLE_ID" select="selectDetailList" />
		<collection property="attachmentList"  javaType="ArrayList"  
			column="ATTACHMENT_ID" select="selectAttachmentList" />
	</resultMap>
	
	<resultMap type="com.ifreework.entity.loophole.LoopholeDetail" id="loopholeDetail">
		<id column="LOOPHOLE_DETAIL_ID" property="loopholeDetailId"/>
		<result column="LOOPHOLE_ID" property="loopholeId"/>
		<result column="LOOPHOLE_NAME" property="loopholeName"/>
		<result column="LOOPHOLE_LEVEL" property="loopholeLevel"/>
		<result column="QUANTITY" property="quantity"/>
	</resultMap>
	
	<resultMap type="com.ifreework.entity.system.Attachment" id="attachment">
		<id column="ATTACHMENT_ID" property="attachmentId"/>
		<result column="ATTACHMENT_NAME" property="attachmentName"/>
		<result column="ATTACHMENT_PATH" property="attachmentPath"/>
		<result column="ATTACHMENT_SIZE" property="attachmentSize"/>
		<result column="ATTACHMENT_FORMAT_SIZE" property="attachmentFormatSize"/>
	</resultMap>
	
	<select id="queryPageList" parameterType="pd"
		resultMap="loophole">
		select
			l.LOOPHOLE_ID,
			l.TITLE,
			l.DOMAIN,
			l.DOMAIN_NAME,
			l.LOOPHOLE_DESCRIBE,
			l.ATTACHMENT_ID,
			l.STATUS,
			l.HANDLE_DESCRIBE,
			l.CONFIRM_DESCRIBE,
			l.CREATE_USER,
			l.CREATE_TIME,
			l.SUBMIT_USER,
			l.SUBMIT_TIME,
			l.HANDLE_USER,
			l.HANDLE_TIME,
			l.CONFIRM_USER,
			l.CONFIRM_TIME,
		   u1.username    create_username,
	       u1.person_name create_person_name,
	       u2.username    handle_username,
	       u2.person_name handle_person_name,
	       u3.username    confirm_username,
	       u3.person_name confirm_person_name,
	       u4.username    submit_username,
	       u4.person_name submit_person_name
		  from loo_loophole l
		  left join sys_user u1
		    on l.create_user = u1.user_id
		  left join sys_user u2
		    on l.handle_user = u2.user_id
		  left join sys_user u3
		    on l.confirm_user = u3.user_id
		   left join sys_user u4
		    on l.submit_user = u4.user_id
			<where>
			<trim prefixOverrides="and">
				<if test=" domain != null and  domain != ''">
					and  l.DOMAIN like '%' || #{domain} || '%'
				</if>
				<if test=" domainName != null and  domainName != ''">
					and  l.DOMAIN_NAME like '%' || #{domainName} || '%'
				</if>
				<if test=" status != null and  status != ''">
					and  l.STATUS = #{status}
				</if>
				<if test=" createUser != null and  createUser != ''">
					and  l.CREATE_USER = #{createUser}
				</if>
				<if test=" handleUser != null and  handleUser != ''">
					and  l.HANDLE_USER = #{handleUser}
				</if>
				<if test=" confirmUser != null and  confirmUser != ''">
					and  l.CONFIRM_USER = #{confirmUser}
				</if>
				</trim>
			</where>
			<foreach collection="columns" item="column" index="index"
           		 open="order by" close="" separator=",">
            <if test="column.orderable">
            	${column.name}   ${column.orderDir}
            </if>
        </foreach>
	</select>
	
	
	<select id="getLoophole" parameterType="string"
		resultMap="loophole">
		select
			l.LOOPHOLE_ID,
			l.TITLE,
			l.DOMAIN,
			l.DOMAIN_NAME,
			l.LOOPHOLE_DESCRIBE,
			l.ATTACHMENT_ID,
			l.STATUS,
			l.HANDLE_DESCRIBE,
			l.CONFIRM_DESCRIBE,
			l.CREATE_USER,
			l.CREATE_TIME,
			l.SUBMIT_USER,
			l.SUBMIT_TIME,
			l.HANDLE_USER,
			l.HANDLE_TIME,
			l.CONFIRM_USER,
			l.CONFIRM_TIME,
		   u1.username    create_username,
	       u1.person_name create_person_name,
	       u2.username    handle_username,
	       u2.person_name handle_person_name,
	       u3.username    confirm_username,
	       u3.person_name confirm_person_name,
	       u4.username    submit_username,
	       u4.person_name submit_person_name
		  from loo_loophole l
		  left join sys_user u1
		    on l.create_user = u1.user_id
		  left join sys_user u2
		    on l.handle_user = u2.user_id
		  left join sys_user u3
		    on l.confirm_user = u3.user_id
		   left join sys_user u4
		    on l.submit_user = u4.user_id
			where LOOPHOLE_ID = #{loopholeId}
	</select>
	
	<select id="selectDetailList" parameterType="string" resultMap="loopholeDetail">
		select * from loo_loophole_detail  where LOOPHOLE_ID = #{loopholeId} 
	</select>
	
	<select id="selectAttachmentList" parameterType="string" resultMap="attachment">
		select *
		  from sys_attachment
		 where attachment_id in
		       (select * from table(splitstr(#{attachmentId,jdbcType=VARCHAR}, ',')))
	</select>
	
	
	<select id="countLoopholeQuantity" resultType="hashMap">
		select l.domain_name, sum(ld.quantity) quantity
		  from loo_loophole l, loo_loophole_detail ld
		 where l.loophole_id = ld.loophole_id
		 group by l.domain_name
	</select>
	
	
	<insert id="add" parameterType="com.ifreework.entity.loophole.Loophole">
		<selectKey keyProperty="loopholeId" resultType="String" order="BEFORE">
			select sys_guid() from dual
		</selectKey>
		
		insert into LOO_LOOPHOLE (<include refid="loopholeColumns"/>) 
		values 
		(
			#{ loopholeId,jdbcType=VARCHAR },
			#{ domain,jdbcType=VARCHAR },
			#{ domainName,jdbcType=VARCHAR },
			#{ loopholeDescribe,jdbcType=CLOB },
			#{ attachmentId,jdbcType=VARCHAR },
			#{ status,jdbcType=VARCHAR },
			#{ handleDescribe,jdbcType=VARCHAR },
			#{ confirmDescribe,jdbcType=VARCHAR },
			#{ createUser,jdbcType=VARCHAR },
			#{ createTime,jdbcType=TIMESTAMP },
			#{ submitUser,jdbcType=VARCHAR },
			#{ submitTime,jdbcType=TIMESTAMP },
			#{ handleUser,jdbcType=VARCHAR },
			#{ handleTime,jdbcType=TIMESTAMP },
			#{ confirmUser,jdbcType=VARCHAR },
			#{ confirmTime,jdbcType=TIMESTAMP },
			#{ title,jdbcType=TIMESTAMP }
		)
	</insert>
	
	<update id="update" parameterType="com.ifreework.entity.loophole.Loophole">
		update  LOO_LOOPHOLE
		<trim prefix="SET" suffixOverrides=",">  
	        <if test="domain != null ">  
	           DOMAIN = #{domain},
	        </if>  
	        <if test="domainName != null ">  
	           DOMAIN_NAME = #{domainName},
	        </if>  
	        <if test="loopholeDescribe != null ">  
	           LOOPHOLE_DESCRIBE = #{loopholeDescribe},
	        </if>  
	        <if test="attachmentId != null ">  
	           ATTACHMENT_ID = #{attachmentId},
	        </if>  
	        <if test="status != null ">  
	           STATUS = #{status},
	        </if>  
	        <if test="handleDescribe != null ">  
	           HANDLE_DESCRIBE = #{handleDescribe},
	        </if>  
	        <if test="confirmDescribe != null ">  
	           CONFIRM_DESCRIBE = #{confirmDescribe},
	        </if>  
	        <if test="createUser != null ">  
	           CREATE_USER = #{createUser},
	        </if>  
	        <if test="createTime != null ">  
	           CREATE_TIME = #{createTime},
	        </if>  
	        <if test="submitUser != null ">  
	           SUBMIT_USER = #{submitUser},
	        </if>  
	        <if test="submitTime != null ">  
	           SUBMIT_TIME = #{submitTime},
	        </if>  
	        <if test="handleUser != null ">  
	           HANDLE_USER = #{handleUser},
	        </if>  
	        <if test="handleTime != null ">  
	           HANDLE_TIME = #{handleTime},
	        </if>  
	        <if test="confirmUser != null ">  
	           CONFIRM_USER = #{confirmUser},
	        </if>  
	        <if test="confirmTime != null ">  
	           CONFIRM_TIME = #{confirmTime}
	        </if>  
	        <if test="title != null ">  
	           TITLE = #{title}
	        </if>  
		</trim>
			where 
	        <if test="loopholeId != null ">  
	           LOOPHOLE_ID = #{loopholeId}
	        </if>  
	</update>
	<update id="delete" parameterType="string">
		delete from LOO_LOOPHOLE  where LOOPHOLE_ID = #{loopholeId}
	</update>
</mapper>